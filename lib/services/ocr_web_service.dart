// ЁЯФ╣ р╣Гр╕Кр╣Й http package р╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╣Ир╕З HTTP request
import 'package:http/http.dart' as http;

// ЁЯФ╣ р╣Гр╕Кр╣Йр╕кр╕│р╕лр╕гр╕▒р╕Ър╣Бр╕Ыр╕ер╕З JSON
import 'dart:convert';

// ЁЯФ╣ р╣Гр╕Кр╣Йр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕ар╕▓р╕Юр╣Бр╕Ър╕Ъ byte
import 'dart:typed_data';

// ЁЯФ╕ р╕Др╕ер╕▓р╕к OCRWebService р╕кр╕│р╕лр╕гр╕▒р╕Ър╣Ар╕гр╕╡р╕вр╕Бр╣Гр╕Кр╣Й OCR API
class OCRWebService {
  // ЁЯФС р╕Др╕╡р╕вр╣М API р╕Ир╕▓р╕Б ocr.space (р╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Гр╕Кр╣Й key р╕Чр╕Фр╕кр╕нр╕Ър╕Щр╕╡р╣Йр╣Др╕Фр╣Й р╣Бр╕Хр╣Ир╣Др╕бр╣Ир╕Др╕зр╕гр╣Ар╕Ьр╕вр╣Бр╕Юр╕гр╣Ир╣Гр╕Щр╣Вр╕Ыр╕гр╕Фр╕▒р╕Бр╕Кр╕▒р╕Щ)
  static const String _apiKey = 'K83611259588957';

  // ЁЯФ╣ р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕лр╕ер╕▒р╕Бр╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╣Ир╕Зр╕ар╕▓р╕Юр╣Др╕Ыр╕вр╕▒р╕З OCR API р╣Бр╕ер╕░р╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Бр╕ер╕▒р╕Ър╕бр╕▓
  static Future<String> scanImage(Uint8List imageBytes) async {
    // ЁЯФ╕ р╕Бр╕│р╕лр╕Щр╕Ф URL р╕Вр╕нр╕З API
    final uri = Uri.parse('https://api.ocr.space/parse/image');

    // ЁЯФ╕ р╕кр╕гр╣Йр╕▓р╕З HTTP request р╣Бр╕Ър╕Ъ multipart р╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╣Ир╕Зр╕ар╕▓р╕Ю
    final request =
        http.MultipartRequest('POST', uri)
          ..fields['apikey'] =
              _apiKey // р╕кр╣Ир╕З API key р╣Др╕Ыр╣Гр╕Щр╕Яр╕┤р╕ер╕Фр╣М
          ..fields['language'] =
              'eng' // ЁЯФБ р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Ар╕Ыр╣Зр╕Щ 'tha' р╣Др╕Фр╣Йр╕Цр╣Йр╕▓р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕кр╣Бр╕Бр╕Щр╕ар╕▓р╕йр╕▓р╣Др╕Чр╕в
          ..files.add(
            http.MultipartFile.fromBytes(
              'file', // р╕Яр╕┤р╕ер╕Фр╣Мр╕Кр╕╖р╣Ир╕н 'file' р╕Др╕╖р╕нр╕Кр╕╖р╣Ир╕н key р╕Чр╕╡р╣И API р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕г
              imageBytes, // р╣Др╕Яр╕ер╣Мр╕ар╕▓р╕Юр╕Чр╕╡р╣Ир╣Ар╕Ыр╣Зр╕Щ byte array
              filename: 'upload.png', // р╕Кр╕╖р╣Ир╕нр╣Др╕Яр╕ер╣Мр╕Ир╕│р╕ер╕нр╕З
            ),
          );

    // ЁЯФ╕ р╕кр╣Ир╕З request р╣Др╕Ыр╕вр╕▒р╕З API р╣Бр╕ер╕░р╕гр╕нр╕гр╕▒р╕Ъ response р╣Бр╕Ър╕Ъ stream
    final streamedResponse = await request.send();

    // ЁЯФ╕ р╣Бр╕Ыр╕ер╕З stream р╣Ар╕Ыр╣Зр╕Щ HTTP response р╕Ыр╕Бр╕Хр╕┤
    final response = await http.Response.fromStream(streamedResponse);

    // ЁЯФ╕ р╣Бр╕Ыр╕ер╕Зр╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╕Ир╕▓р╕Б JSON р╣Ар╕Ыр╣Зр╕Щ Map
    final result = json.decode(response.body);

    // ЁЯФ╕ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓ OCR р╕кр╕│р╣Ар╕гр╣Зр╕Ир╕лр╕гр╕╖р╕нр╣Др╕бр╣И
    if (result['IsErroredOnProcessing'] == false) {
      // ЁЯФ╣ р╕Цр╣Йр╕▓р╕кр╕│р╣Ар╕гр╣Зр╕И тЖТ р╕Др╕╖р╕Щр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Чр╕╡р╣Ир╕Хр╕гр╕зр╕Ир╣Ар╕Ир╕н
      return result['ParsedResults'][0]['ParsedText'] ?? 'р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Гр╕Щр╕ар╕▓р╕Ю';
    } else {
      // ЁЯФ╣ р╕Цр╣Йр╕▓р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з тЖТ р╕Др╕╖р╕Щр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щ
      return 'тЭМ OCR Failed: ${result['ErrorMessage'] ?? 'Unknown error'}';
    }
  }
}
